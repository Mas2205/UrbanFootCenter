#!/bin/bash

# Couleurs pour les logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ === SETUP MARKETPLACE LOCALHOST ===${NC}"
echo ""

# Fonction pour afficher les √©tapes
log() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ] && [ ! -d "backend" ]; then
    error "Veuillez ex√©cuter ce script depuis la racine du projet Urban Foot Center"
    exit 1
fi

echo -e "${BLUE}üìã Configuration du syst√®me de paiement marketplace${NC}"
echo "- PayDunya WebPay pour l'encaissement multi-canaux"
echo "- Wave Payout API pour les versements propri√©taires"
echo "- Commission plateforme automatique (10%)"
echo ""

# 1. Installer les d√©pendances
echo -e "${BLUE}üì¶ Installation des d√©pendances...${NC}"

# Backend
cd backend
if [ ! -d "node_modules" ]; then
    log "Installation d√©pendances backend..."
    npm install
else
    log "D√©pendances backend d√©j√† install√©es"
fi

# Installer les nouvelles d√©pendances pour marketplace
log "Installation d√©pendances marketplace..."
npm install axios uuid qrcode

cd ..

# Frontend
cd frontend
if [ ! -d "node_modules" ]; then
    log "Installation d√©pendances frontend..."
    npm install
else
    log "D√©pendances frontend d√©j√† install√©es"
fi

# Installer QR code pour React
log "Installation d√©pendances QR code..."
npm install qrcode @types/qrcode

cd ..

# 2. Configuration des variables d'environnement
echo ""
echo -e "${BLUE}üîß Configuration des variables d'environnement...${NC}"

# Backend .env
if [ ! -f "backend/.env" ]; then
    log "Cr√©ation fichier backend/.env..."
    cp backend/.env.example backend/.env
fi

# Ajouter les variables marketplace si pas pr√©sentes
if ! grep -q "PAYDUNYA_MASTER_KEY" backend/.env; then
    log "Ajout variables marketplace au .env..."
    cat >> backend/.env << EOF

# === MARKETPLACE CONFIGURATION ===
# PayDunya (Sandbox) - REMPLACER PAR VOS VRAIES CL√âS
PAYDUNYA_MASTER_KEY=test-master-key-paydunya
PAYDUNYA_PRIVATE_KEY=test-private-key-paydunya
PAYDUNYA_PUBLIC_KEY=test-public-key-paydunya

# Wave Payout API (Sandbox) - REMPLACER PAR VOTRE VRAIE CL√â
WAVE_API_KEY=wave_sn_sandbox_your_test_key

# Configuration Marketplace
PAYMENTS_ENV=sandbox
PLATFORM_FEE_BPS=1000
BASE_URL=http://localhost:5001
EOF
else
    log "Variables marketplace d√©j√† pr√©sentes dans .env"
fi

# Frontend .env
if [ ! -f "frontend/.env" ]; then
    log "Cr√©ation fichier frontend/.env..."
    cat > frontend/.env << EOF
REACT_APP_API_BASE_URL=http://localhost:5001/api
REACT_APP_PAYMENTS_ENV=sandbox
EOF
else
    log "Fichier frontend/.env d√©j√† existant"
fi

# 3. Ex√©cuter les migrations
echo ""
echo -e "${BLUE}üóÑÔ∏è  Ex√©cution des migrations marketplace...${NC}"

cd backend

# V√©rifier si les migrations existent
if [ -f "migrations/20251005210000-add-marketplace-fields.js" ]; then
    log "Ex√©cution des migrations..."
    npx sequelize-cli db:migrate
else
    warning "Migrations marketplace non trouv√©es, cr√©ation manuelle..."
    
    # Cr√©er les migrations si elles n'existent pas
    log "Cr√©ation des migrations marketplace..."
    
    # Note: Les fichiers de migration ont d√©j√† √©t√© cr√©√©s dans les √©tapes pr√©c√©dentes
    # Ici on s'assure qu'ils sont ex√©cut√©s
    npx sequelize-cli db:migrate
fi

cd ..

# 4. Mise √† jour du mod√®le index.js
echo ""
echo -e "${BLUE}üîó Mise √† jour des mod√®les...${NC}"

# V√©rifier si les nouveaux mod√®les sont inclus
if [ -f "backend/src/models/marketplace_payment.model.js" ]; then
    log "Mod√®les marketplace cr√©√©s"
    
    # Ajouter les mod√®les √† l'index si pas d√©j√† fait
    if ! grep -q "MarketplacePayment" backend/src/models/index.js; then
        log "Ajout des mod√®les marketplace √† l'index..."
        
        # Backup de l'index
        cp backend/src/models/index.js backend/src/models/index.js.backup
        
        # Ajouter les imports (√† adapter selon votre structure)
        cat >> backend/src/models/index.js << EOF

// Mod√®les Marketplace
db.MarketplacePayment = require('./marketplace_payment.model')(sequelize, Sequelize.DataTypes);
db.Payout = require('./payout.model')(sequelize, Sequelize.DataTypes);
EOF
    fi
else
    warning "Mod√®les marketplace non trouv√©s"
fi

# 5. Tester la configuration
echo ""
echo -e "${BLUE}üß™ Test de la configuration...${NC}"

# D√©marrer le serveur en arri√®re-plan pour tester
cd backend
log "D√©marrage du serveur de test..."
npm start &
SERVER_PID=$!

# Attendre que le serveur d√©marre
sleep 5

# Tester l'endpoint health
if curl -s http://localhost:5001/api/marketplace/health > /dev/null; then
    log "API marketplace accessible"
else
    warning "API marketplace non accessible (normal si pas de token admin)"
fi

# Arr√™ter le serveur de test
kill $SERVER_PID 2>/dev/null

cd ..

# 6. Instructions finales
echo ""
echo -e "${GREEN}üéâ === SETUP MARKETPLACE TERMIN√â ===${NC}"
echo ""
echo -e "${BLUE}üìã PROCHAINES √âTAPES:${NC}"
echo ""
echo "1. üîë CONFIGURER LES CL√âS API:"
echo "   - Cr√©ez un compte PayDunya sandbox: https://paydunya.com"
echo "   - Obtenez vos cl√©s API PayDunya"
echo "   - Cr√©ez un compte Wave d√©veloppeur"
echo "   - Obtenez votre cl√© Wave Payout API"
echo "   - Mettez √† jour backend/.env avec vos vraies cl√©s"
echo ""
echo "2. üèóÔ∏è  CONFIGURER LES TERRAINS:"
echo "   - Connectez-vous en tant qu'admin terrain"
echo "   - Allez dans 'Moyens de paiement'"
echo "   - Configurez le canal de payout (Wave/Orange Money)"
echo "   - Ajoutez le num√©ro mobile E.164 (+221xxxxxxxxx)"
echo ""
echo "3. üß™ TESTER LE SYST√àME:"
echo "   - D√©marrez l'application: npm run dev"
echo "   - Cr√©ez une r√©servation"
echo "   - Testez le paiement marketplace"
echo "   - V√©rifiez les logs de webhook"
echo ""
echo -e "${BLUE}üöÄ COMMANDES UTILES:${NC}"
echo "   npm run dev              # D√©marrer en d√©veloppement"
echo "   npm run marketplace:test # Tester les services (√† cr√©er)"
echo "   npm run logs             # Voir les logs"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANT:${NC}"
echo "   - Utilisez SANDBOX en d√©veloppement"
echo "   - Testez avec de petits montants"
echo "   - V√©rifiez les webhooks avec ngrok si n√©cessaire"
echo "   - Surveillez les logs pour d√©bugger"
echo ""
echo -e "${GREEN}‚úÖ Marketplace pr√™t pour le d√©veloppement !${NC}"
